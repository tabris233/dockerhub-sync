name: Sync DockerHub Images to GHCR

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.matrix) }}
      max-parallel: 3

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y yq jq curl skopeo

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Read and Sync Images
        run: |
          COUNT=$(yq '.images | length' images.yaml)
          for i in $(seq 0 $((COUNT - 1))); do
            SRC=$(yq -r ".images[$i].source" images.yaml)
            DST=$(yq -r ".images[$i].target" images.yaml)
            echo "üîç Checking $SRC ‚Üí $DST"

            # Ëé∑Âèñ Docker Hub ÈïúÂÉè Digest
            DOCKERHUB_DIGEST=$(skopeo inspect docker://$SRC | jq -r '.Digest')

            # Ëé∑Âèñ GHCR ÈïúÂÉè Digest
            GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/$DST
            GHCR_DIGEST=$(skopeo inspect docker://$GHCR_IMAGE 2>/dev/null | jq -r '.Digest')

            if [ "$DOCKERHUB_DIGEST" = "$GHCR_DIGEST" ]; then
              echo "‚úÖ $SRC and $GHCR_IMAGE are identical. Skipping sync."
              continue
            else
              echo "‚ôªÔ∏è $SRC and $GHCR_IMAGE differ. Syncing..."

              docker pull $SRC
              docker tag $SRC $GHCR_IMAGE
              docker push $GHCR_IMAGE

              # Ëá™Âä®ÂÖ¨ÂºÄËÆæÁΩÆ
              PACKAGE_NAME=$(echo $DST | cut -d':' -f1)
              echo "üåü Setting ghcr.io/${{ github.repository_owner }}/$PACKAGE_NAME public"

              curl -X PATCH \
                -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/user/packages/container/$PACKAGE_NAME \
                -d '{"visibility":"public"}'
            fi
          done
