name: Sync DockerHub Images to GHCR

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Set up matrix
        id: set-matrix
        run: |
          IMAGES=$(yq -o=json '.images' images.yaml)
          echo "matrix=$IMAGES" >> $GITHUB_OUTPUT

  sync:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.matrix) }}
      max-parallel: 3

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y yq jq curl skopeo

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Sync Single Image
        run: |
          SRC=${{ matrix.image.source }}
          DST=${{ matrix.image.target }}

          echo "üîç Checking $SRC ‚Üí $DST"
          DOCKERHUB_DIGEST=$(skopeo inspect docker://$SRC | jq -r '.Digest')
          GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/$DST
          GHCR_DIGEST=$(skopeo inspect docker://$GHCR_IMAGE 2>/dev/null | jq -r '.Digest')
          if [ "$DOCKERHUB_DIGEST" = "$GHCR_DIGEST" ]; then
            echo "‚úÖ $SRC and $GHCR_IMAGE are identical. Skipping sync."
            exit 0
          fi

          echo "‚ôªÔ∏è $SRC and $GHCR_IMAGE differ. Syncing..."
          docker pull $SRC
          docker tag $SRC $GHCR_IMAGE
          docker push $GHCR_IMAGE
          PACKAGE_NAME=$(echo $DST | cut -d':' -f1)

          echo "üåü Setting ghcr.io/${{ github.repository_owner }}/$PACKAGE_NAME public"
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.GHCR_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/packages/container/$PACKAGE_NAME \
            -d '{"visibility":"public"}'
